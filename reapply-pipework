#!/bin/bash

# Author: Christoph Zauner
# Source code repo: https://github.com/zaunerc/reapply-pipework-script 
# Docs: https://github.com/zaunerc/reapply-pipework/README.md

set -e

# Params: 1. Message to print to stdout.
#
function error_exit
{
	echo "$1" 1>&2
	exit 1
}

# Params: 1. Container name
#
function is_container_running {

	local CONTAINER_NAME="$1"

	# Container name is always unique.
	if [[ $(echo_cid_for_container_name "$CONTAINER_NAME") == "" ]]; then
		echo "false"
	else
		echo "true"
	fi
}

# Params: 1. MAC
#
function is_mac_present_in_def_ns {
	local MAC="$1"
	local PRESENT_MAC_COUNT=$(ip -o link | grep "$MAC" | wc -l)
	
	if [[ $PRESENT_MAC_COUNT -eq 1 ]]; then
		echo "true"
	elif [[ $PRESENT_MAC_COUNT -gt 1 ]]; then
		error_exit "Multiple interface with MAC "$MAC" present. Aborting."
	else
		echo "false"
	fi
}

# Params: 1. Container name
#
function echo_cid_for_container_name {

	local CONTAINER_NAME=$1

	local CID=$(docker ps --filter name="^/$CONTAINER_NAME$" --format "{{.ID}}")
	echo $CID
}

# Params: 1. MAC address
#
function echo_interface_for_mac_address {

	local MAC=$1

	INTERFACE=$(ip -o link | grep "$MAC" | cut -d' ' -f2 | head --bytes -2)
	echo $INTERFACE
}

# Params: 1. Container name
#         2. MAC for container
#         3. IP to assign
#         4. Subnet mask (e.g. 24)
#         5. Gateway IP
#
function run_pipeworks_if_required {

	local CONTAINER_NAME="$1"
	local MAC="$2"
	
	local IP="$3"
	local SUBNET="$4"
	local GATEWAY_IP="$5"

	if [ $(is_container_running "$CONTAINER_NAME") == "true" ] && [ $(is_mac_present_in_def_ns "$MAC") == "true" ]; then
		
		local CID=$(echo_cid_for_container_name "$CONTAINER_NAME")
		local INTERFACE=$(echo_interface_for_mac_address "$MAC")		

		echo "===> RUNNING PIPEWORK FOR FOLLOWING CONTAINER NAME & MAC TUPLE:"
		run_pipeworks "$CID" "$IP" "$INTERFACE" "$SUBNET" "$GATEWAY_IP"
	else
		echo "===> not running pipework for following container name & MAC tuple:"
	fi
	echo -e "\tcontainer name: '$CONTAINER_NAME' mac: '$MAC' (ip: '$IP' subnet: '$SUBNET' gateway: '$GATEWAY_IP')"
}

# Params: 1. Container ID
#         2. IP to assign
#         3. Network interface to use
#         4. Subnet mask (e.g. 24)
#         5. Gateway IP
#
function run_pipeworks {
	
	local CID="$1"
	local IP="$2"
	local INTERFACE="$3"
	local SUBNET="$4"
	local GATEWAY_IP="$5"

	/usr/local/sbin/pipework --direct-phys "$INTERFACE" "$CID" "$IP"/"$SUBNET"@"$GATEWAY_IP"
}

source /usr/local/etc/reapply-pipework.conf

